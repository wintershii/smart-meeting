<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.winter.dao.UserMeetingMapper">
  <resultMap id="BaseResultMap" type="com.winter.domain.UserMeeting">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="meeting_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="meeting_intro" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="room_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="master_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="start_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>


  <resultMap id="UserStatus" type="com.winter.vo.UserStatus">
    <result column="user_id" property="userId"/>
    <result column="username" property="username"/>
    <result column="user_status" property="userStatus"/>
  </resultMap>

  <sql id="Base_Column_List">
    id, meeting_name, meeting_intro, user_id, room_id, user_status, status, master_id, 
    start_time, end_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from smart_meeting
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from smart_meeting
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.winter.domain.UserMeeting">
    insert into smart_meeting (id, meeting_name, meeting_intro, 
      user_id, room_id, user_status, 
      status, master_id, start_time, 
      end_time, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{meetingName,jdbcType=VARCHAR}, #{meetingIntro,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{roomId,jdbcType=INTEGER}, #{userStatus,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{masterId,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.winter.domain.UserMeeting">
    insert into smart_meeting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="meetingName != null">
        meeting_name,
      </if>
      <if test="meetingIntro != null">
        meeting_intro,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="masterId != null">
        master_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="meetingName != null">
        #{meetingName,jdbcType=VARCHAR},
      </if>
      <if test="meetingIntro != null">
        #{meetingIntro,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="masterId != null">
        #{masterId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.winter.domain.UserMeeting">
    update smart_meeting
    <set>
      <if test="meetingName != null">
        meeting_name = #{meetingName,jdbcType=VARCHAR},
      </if>
      <if test="meetingIntro != null">
        meeting_intro = #{meetingIntro,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="masterId != null">
        master_id = #{masterId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.winter.domain.UserMeeting">
    update smart_meeting
    set meeting_name = #{meetingName,jdbcType=VARCHAR},
      meeting_intro = #{meetingIntro,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      room_id = #{roomId,jdbcType=INTEGER},
      user_status = #{userStatus,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      master_id = #{masterId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getUserMeetingsOngoing" parameterType="map" resultMap="BaseResultMap" resultType="list">
    select
    <include refid="Base_Column_List"/>
    from smart_meeting
    where user_id = #{userId}
    and
    (status = 2 or status = 3)
  </select>

  <select id="getUserMeetingsFinished" parameterType="map" resultMap="BaseResultMap" resultType="list">
    select
    <include refid="Base_Column_List"/>
    from smart_meeting
    where user_id = #{userId}
    and
    status = 1
  </select>

  <select id="getPeopleNum" resultType="int" parameterType="integer">
    select count(1)
    from smart_meeting
    where meeting_name = #{meetingName}
  </select>

  <select id="getUserStatus" parameterType="integer" resultType="list" resultMap="UserStatus">
    select user_id, username, user_status
    from smart_meeting ,smart_user
    where smart_meeting.id = #{meetingId}
  </select>

  <select id="getMeetingIdByRoomId" resultMap="BaseResultMap" resultType="list" parameterType="map">
    select
    <include refid="Base_Column_List"/>
    from smart_meeting
    where room_id = #{roomId}
    <if test="flag != null">
      and DATE_SUB(CURDATE(), INTERVAL 5 DAY) &lt;= start_time
    </if>
  </select>
</mapper>