<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.winter.dao.OnlineMeetingMapper">
  <resultMap id="BaseResultMap" type="com.winter.domain.OnlineMeeting">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="live_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="live_pwd" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="online_num" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="start_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, live_name, live_pwd, create_id, online_num, status,start_time, end_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from online_meeting
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from online_meeting
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.winter.domain.OnlineMeeting" keyProperty="id" useGeneratedKeys="true">
    insert into online_meeting (id, live_name, live_pwd, 
      create_id, online_num, status,start_time
      )
    values (default , #{liveName,jdbcType=VARCHAR}, #{livePwd,jdbcType=VARCHAR},
      #{createId,jdbcType=INTEGER}, #{onlineNum,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
      now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.winter.domain.OnlineMeeting">
    insert into online_meeting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="liveName != null">
        live_name,
      </if>
      <if test="livePwd != null">
        live_pwd,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="onlineNum != null">
        online_num,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="liveName != null">
        #{liveName,jdbcType=VARCHAR},
      </if>
      <if test="livePwd != null">
        #{livePwd,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="onlineNum != null">
        #{onlineNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.winter.domain.OnlineMeeting">
    update online_meeting
    <set>
      <if test="liveName != null">
        live_name = #{liveName,jdbcType=VARCHAR},
      </if>
      <if test="livePwd != null">
        live_pwd = #{livePwd,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="onlineNum != null">
        online_num = #{onlineNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.winter.domain.OnlineMeeting">
    update online_meeting
    set live_name = #{liveName,jdbcType=VARCHAR},
      live_pwd = #{livePwd,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=INTEGER},
      online_num = #{onlineNum,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateStatus" parameterType="integer">
    update online_meeting
    set status = 0, end_time = now()
    where id = #{liveId}
  </update>

  <update id="updateOnlinePeopleNum" parameterType="integer">
    update online_meeting
    set online_num = online_num + 1
    where id = #{liveId}
  </update>

  <select id="selectAll" resultType="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from online_meeting
  </select>

  <select id="getPassword" resultType="string" parameterType="integer">
    select live_pwd
    from online_meeting
    where id = #{liveId}
  </select>

    <select id="checkStatus" parameterType="integer" resultType="int">
        select status
        from online_meeting
        where id = #{liveId}
    </select>
</mapper>